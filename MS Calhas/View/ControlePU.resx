<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lwy7t3LoLocAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAARv0AAEb9AbG3MqIAAANESURBVFhH3dlLSFRRGAfwAz0w
        WgVRkFGLoAjatGjVg4KIwGU6kzrOzJ3RzFemTkT7FrUsKlLzQfbQRlGx16iB1MJVuAlXtagoIYNCbFed
        /ufMjN2585/HcWayWvwY57vnfN//3sVwLgpXt5XJGtgBB6EBrkIvDMEUvILX8AG+wFf4CG9gFl7AMPTB
        DWiDI7AL1gGbuYQWYT9chmlQQ2WBLMIMXINjkJTF/mUTtMMcsGZ/gnoYA7ATEgK6gW1YSRdAB3TZin+b
        kHD1WEfLuvwLpR0+tmBFlHX6ZNkt5OmxAuLETa9wdVnby+/WfFYhS9u9uOinGwtJzVSzlfI7NdLdGzys
        sgnPYIPwjp4RgYnQAXzKivu1SB6Q8bA6sL4jv8STps2NoIfqo3qWdkT7q083ZpbfOyWrhhtlcCLk9T86
        q7OJ4LNzKpywIm3q70sgrSctsmqkUXoG62VFf6082VetHndy41jztGzr9I3GbtJ9u1o/DE+4XofyY6aa
        DQ+sSKsIjOs8QlhPW52mcFEGJ/Vi/Ynw0v+4RfoeNkvvaJP0DDXIynCdrBw4jRsADKJwc2qNWqv2eEea
        pG+sWeLp6J7ByVA8lAyMhyRmv4UiWxYacDMsgtqgBSIwEdKWgsfCR6l69Hp0TVzsum19fE0AAe0zYvZB
        Qp6ELzYeYA0KqRWSsiQVbK4Da1QIEWAZ0gZUXgJrmE/zsAHY/IwBdwNrmk/Hgc3WaNGhDljjfLgCbOYS
        WiT6gA3IxTSwWQlokVgL74ANWo5vsA3YrAS0mMIhYMOWQ/2MsRlJaDGN88AGmugG1puixQxGgQ3Oxiyw
        ninRYgYbYQFYgEz2AuuZEi1moQRYgHSagfVKixazdBFYECYMrEdG+iyYg5nfJxoOa95DkW2PEYEzXi72
        qFN4zHcHXceaEsceI+p9JBercEqe0yflTt8PB1X7iTVbHHuMCBzBc7Eax/dPCe8cDlhT7NhjJP7ivlwZ
        A0IxsL1ZoUUD/0XArcD2ZoUWDfzzAfuB7csaLRpIFzAMbI8RWjSQKuAYsPXGaNEAC5iXJxdHiwacAQeB
        rVs2WjSgAs5DQcIptGhA/QdAhXtuq+UVLRpQv3EdsN5WyyNL/ALMcKycaNaivAAAAABJRU5ErkJggg==
</value>
  </data>
</root>